{"version":3,"sources":["api/api.ts","components/PostsList/PostsList.tsx","api/posts.ts","components/NewCommentForm/NewCommentForm.tsx","api/comments.ts","components/PostDetails/PostDetails.tsx","App.tsx","index.tsx"],"names":["BASE_URL","PostsList","userId","setSelectedPostId","selectedPostId","setPost","useState","posts","setPosts","useEffect","fetch","then","response","ok","json","Promise","reject","getUserPosts","allPosts","catch","error","console","log","className","map","post","title","id","type","onClick","NewCommentForm","postId","commentsFromServer","name","setName","email","setEmail","body","setBody","commentAdder","event","comment","preventDefault","method","JSON","stringify","headers","onSubmit","placeholder","value","onChange","target","required","PostDetails","postInfo","setPostInfo","comments","setComments","visibleComments","setVisibleComments","deleting","setDeleting","err","deleteComments","deleteComment","length","App","setUserId","ReactDOM","render","document","getElementById"],"mappings":"2RAAaA,G,iBAAW,qC,OCWXC,EAA6B,SAAC,GAKpC,IAJLC,EAII,EAJJA,OACAC,EAGI,EAHJA,kBACAC,EAEI,EAFJA,eACAC,EACI,EADJA,QAEA,EAA0BC,mBAAiB,IAA3C,mBAAOC,EAAP,KAAcC,EAAd,KASA,OAPAC,qBAAU,YCjBgB,SAACP,GAC3B,OAAOQ,MAAM,GAAD,OAAIV,EAAJ,iBAAgC,IAAXE,EAAe,GAAf,kBAA+BA,KAC7DS,MAAK,SAAAC,GACJ,OAAKA,EAASC,GAIPD,EAASE,OAHPC,QAAQC,aDcnBC,CAAaf,GACVS,MAAK,SAAAO,GAAQ,OAAIV,EAASU,MAE1BC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,QAC7B,CAAClB,IAGF,sBAAKqB,UAAU,YAAf,UACE,wCAEA,oBACEA,UAAU,kBACV,UAAQ,cAFV,SAIGhB,GAASA,EAAMiB,KAAI,SAAAC,GAAI,OACtB,qBAAIF,UAAU,kBAAd,UACE,gCACE,6CACaE,EAAKvB,OADlB,SAGCuB,EAAKC,SAEPtB,IAAmBqB,EAAKE,GAErB,wBACEC,KAAK,SACLL,UAAU,2BACVM,QAAS,WACP1B,EAAkB,GAClBE,EAAQ,OALZ,mBAYA,wBACEuB,KAAK,SACLL,UAAU,2BACVM,QAAS,WACP1B,EAAkBsB,EAAKE,IACvBtB,EAAQoB,IALZ,oBArB+BA,EAAKE,aE1BvCG,G,MAAkC,SAAC,GAGzC,IAFLC,EAEI,EAFJA,OACAC,EACI,EADJA,mBAEA,EAAwB1B,mBAAS,IAAjC,mBAAO2B,EAAP,KAAaC,EAAb,KACA,EAA0B5B,mBAAS,IAAnC,mBAAO6B,EAAP,KAAcC,EAAd,KACA,EAAwB9B,mBAAS,IAAjC,mBAAO+B,EAAP,KAAaC,EAAb,KAEMC,EAAe,SAACC,GAGpB,ICD0BC,EDD1BD,EAAME,iBCCoBD,EDCQ,CAChCV,SACAE,OACAE,QACAE,QCJG3B,MAAM,GAAD,OAAIV,EAAJ,aAAyB,CACnC2C,OAAQ,OACRN,KAAMO,KAAKC,UAAUJ,GACrBK,QAAS,CACP,eAAgB,qCAGjBnC,MAAK,SAAAC,GAAQ,OAAIA,EAASE,UDC3BoB,EAAQ,IACRE,EAAS,IACTE,EAAQ,IACRN,EAAmBD,IAGrB,OACE,uBACER,UAAU,iBACVwB,SAAU,SAACP,GACTD,EAAaC,IAHjB,UAME,qBAAKjB,UAAU,aAAf,SACE,uBACEK,KAAK,OACLK,KAAK,OACLe,YAAY,YACZzB,UAAU,wBACV0B,MAAOhB,EACPiB,SAAU,SAACV,GACTN,EAAQM,EAAMW,OAAOF,QAEvBG,UAAQ,MAIZ,qBAAK7B,UAAU,aAAf,SACE,uBACEK,KAAK,OACLK,KAAK,QACLe,YAAY,aACZzB,UAAU,wBACV0B,MAAOd,EACPe,SAAU,SAACV,GACTJ,EAASI,EAAMW,OAAOF,QAExBG,UAAQ,MAIZ,qBAAK7B,UAAU,aAAf,SACE,0BACEU,KAAK,OACLe,YAAY,oBACZzB,UAAU,wBACV0B,MAAOZ,EACPa,SAAU,SAACV,GACTF,EAAQE,EAAMW,OAAOF,QAEvBG,UAAQ,MAIZ,wBACExB,KAAK,SACLL,UAAU,uCAFZ,gCExEO8B,G,MAA+B,SAAC,GAEtC,IADLjD,EACI,EADJA,eAEA,EAAgCE,mBAAsB,MAAtD,mBAAOgD,EAAP,KAAiBC,EAAjB,KACA,EAAgCjD,mBAA4B,MAA5D,mBAAOkD,EAAP,KAAiBC,EAAjB,KACA,EAA8CnD,oBAAS,GAAvD,mBAAOoD,EAAP,KAAwBC,EAAxB,KACA,EAAgCrD,mBAAS,GAAzC,mBAAOsD,EAAP,KAAiBC,EAAjB,KAEM7B,EAAqB,SAACL,GDhBC,IAACI,KCiBZJ,EDhBXjB,MAAM,GAAD,OAAIV,EAAJ,4BAAgC+B,IACzCpB,MAAK,SAAAC,GACJ,OAAKA,EAASC,GAIPD,EAASE,OAHPC,QAAQC,aCchBL,MAAK,SAAA8B,GAAO,OAAIgB,EAAYhB,MAE5BtB,OAAM,SAAA2C,GAAG,OAAIzC,QAAQC,IAAIwC,OAG9BrD,qBAAU,WHZkB,IAACsB,KGaZ3B,EHZVM,MAAM,GAAD,OAAIV,EAAJ,kBAAsB+B,IAC/BpB,MAAK,SAAAC,GACJ,OAAKA,EAASC,GAIPD,EAASE,OAHPC,QAAQC,aGUhBL,MAAK,SAAAc,GAAI,OAAI8B,EAAY9B,MAEzBN,OAAM,SAAA2C,GAAG,OAAIzC,QAAQC,IAAIwC,MAE5B9B,EAAmB5B,KAClB,CAACA,EAAgBwD,IAEpB,IAAMG,EAAiB,SAACpC,IDrBG,SAACA,GACrBjB,MAAM,GAAD,OAAIV,EAAJ,qBAAyB2B,GAAM,CACzCgB,OAAQ,WCoBRqB,CAAcrC,GACdkC,EAAYD,EAAW,IAGzB,OACE,sBAAKrC,UAAU,cAAf,UACE,+CAEA,yBAASA,UAAU,oBAAnB,SACE,mCAAI+B,QAAJ,IAAIA,OAAJ,EAAIA,EAAUjB,SAGhB,0BAASd,UAAU,wBAAnB,UACE,wBACEK,KAAK,SACLL,UAAU,SACVM,QAAS,WACkB,KAAb,OAAR2B,QAAQ,IAARA,OAAA,EAAAA,EAAUS,SACZN,GAAoBD,IAL1B,mBASMA,EAAkB,OAAS,QATjC,cAS0CF,QAT1C,IAS0CA,OAT1C,EAS0CA,EAAUS,OATpD,eAYCP,GAEC,oBAAInC,UAAU,oBAAd,gBACGiC,QADH,IACGA,OADH,EACGA,EAAUhC,KAAI,SAAAiB,GAAO,OACpB,qBACElB,UAAU,yBADZ,UAIE,wBACEK,KAAK,SACLL,UAAU,oCACVM,QAAS,WACPkC,EAAetB,EAAQd,KAJ3B,eASA,4BAAIc,EAAQJ,SAXPI,EAAQd,YAkBvB,kCACE,qBAAKJ,UAAU,4BAAf,SACE,cAAC,EAAD,CACEQ,OAAQ3B,EACR4B,mBAAoBA,aCzBjBkC,EAzDO,WACpB,MAA4B5D,mBAAS,GAArC,mBAAOJ,EAAP,KAAeiE,EAAf,KACA,EAA4C7D,mBAAS,GAArD,mBAAOF,EAAP,KAAuBD,EAAvB,KACA,EAAwBG,mBAAsB,MAA9C,mBAAOmB,EAAP,KAAapB,EAAb,KAEA,OACE,sBAAKkB,UAAU,MAAf,UACE,wBAAQA,UAAU,cAAlB,SACE,wDAGE,yBACEA,UAAU,qBACV0B,MAAO/C,EACPgD,SAAU,SAACV,GACT2B,GAAW3B,EAAMW,OAAOF,QAJ5B,UAOE,wBAAQA,MAAM,IAAd,uBACA,wBAAQA,MAAM,IAAd,2BACA,wBAAQA,MAAM,IAAd,0BACA,wBAAQA,MAAM,IAAd,8BACA,wBAAQA,MAAM,IAAd,8BACA,wBAAQA,MAAM,IAAd,8BACA,wBAAQA,MAAM,IAAd,kCACA,wBAAQA,MAAM,IAAd,6BACA,wBAAQA,MAAM,IAAd,sCACA,wBAAQA,MAAM,IAAd,6BACA,wBAAQA,MAAM,KAAd,mCAKN,uBAAM1B,UAAU,YAAhB,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CACErB,OAAQA,EACRC,kBAAmBA,EACnBC,eAAgBA,EAChBC,QAASA,MAIb,qBAAKkB,UAAU,eAAf,SACGE,GAEC,cAAC,EAAD,CACErB,eAAgBA,aCjD9BgE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ae985fae.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate.academy/students-api';\n","import React, { useEffect, useState } from 'react';\nimport './PostsList.scss';\nimport { getUserPosts } from '../../api/posts';\n\ntype Props = {\n  userId: number,\n  selectedPostId: number,\n  setSelectedPostId: (postId: number) => void\n  setPost: (post: Post | null) => void,\n};\n\nexport const PostsList: React.FC<Props> = ({\n  userId,\n  setSelectedPostId,\n  selectedPostId,\n  setPost,\n}) => {\n  const [posts, setPosts] = useState<Post[]>([]);\n\n  useEffect(() => {\n    getUserPosts(userId)\n      .then(allPosts => setPosts(allPosts))\n      // eslint-disable-next-line no-console\n      .catch(error => console.log(error));\n  }, [userId]);\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul\n        className=\"PostsList__list\"\n        data-cy=\"postDetails\"\n      >\n        {posts && posts.map(post => (\n          <li className=\"PostsList__item\" key={post.id}>\n            <div>\n              <b>\n                {`[User #${post.userId}]: `}\n              </b>\n              {post.title}\n            </div>\n            {selectedPostId === post.id\n              ? (\n                <button\n                  type=\"button\"\n                  className=\"PostsList__button button\"\n                  onClick={() => {\n                    setSelectedPostId(0);\n                    setPost(null);\n                  }}\n                >\n                  Close\n                </button>\n              )\n              : (\n                <button\n                  type=\"button\"\n                  className=\"PostsList__button button\"\n                  onClick={() => {\n                    setSelectedPostId(post.id);\n                    setPost(post);\n                  }}\n                >\n                  Open\n                </button>\n              )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import { BASE_URL } from './api';\n\nexport const getUserPosts = (userId: number): Promise<Post[]> => {\n  return fetch(`${BASE_URL}/posts${userId === 0 ? '' : `?userId=${userId}`}`)\n    .then(response => {\n      if (!response.ok) {\n        return Promise.reject();\n      }\n\n      return response.json();\n    });\n};\n\nexport const getPostDetails = (postId: number): Promise<Post> => {\n  return fetch(`${BASE_URL}/posts/${postId}`)\n    .then(response => {\n      if (!response.ok) {\n        return Promise.reject();\n      }\n\n      return response.json();\n    });\n};\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\nimport { createComment } from '../../api/comments';\n\ntype Props = {\n  postId: number | null,\n  commentsFromServer: (id: number | null) => void\n};\n\nexport const NewCommentForm: React.FC<Props> = ({\n  postId,\n  commentsFromServer,\n}) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const commentAdder = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const commentToSend: NewComment = {\n      postId,\n      name,\n      email,\n      body,\n    };\n\n    createComment(commentToSend);\n    setName('');\n    setEmail('');\n    setBody('');\n    commentsFromServer(postId);\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={(event) => {\n        commentAdder(event);\n      }}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={name}\n          onChange={(event) => {\n            setName(event.target.value);\n          }}\n          required\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={(event) => {\n            setEmail(event.target.value);\n          }}\n          required\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={body}\n          onChange={(event) => {\n            setBody(event.target.value);\n          }}\n          required\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","import { BASE_URL } from './api';\n\nexport const getPostComments = (postId: number | null): Promise<Comments[]> => {\n  return fetch(`${BASE_URL}/comments?postId=${postId}`)\n    .then(response => {\n      if (!response.ok) {\n        return Promise.reject();\n      }\n\n      return response.json();\n    });\n};\n\nexport const deleteComment = (id: number): Promise<Response> => {\n  return fetch(`${BASE_URL}/comments/${id}`, {\n    method: 'DELETE',\n  });\n};\n\nexport const createComment = (comment: NewComment) => {\n  return fetch(`${BASE_URL}/comments`, {\n    method: 'POST',\n    body: JSON.stringify(comment),\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n  })\n    .then(response => response.json());\n};\n","import React, { useEffect, useState } from 'react';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\nimport { getPostDetails } from '../../api/posts';\nimport { getPostComments, deleteComment } from '../../api/comments';\n\ntype Props = {\n  selectedPostId: number,\n};\n\nexport const PostDetails: React.FC<Props> = ({\n  selectedPostId,\n}) => {\n  const [postInfo, setPostInfo] = useState<Post | null>(null);\n  const [comments, setComments] = useState<Comments[] | null>(null);\n  const [visibleComments, setVisibleComments] = useState(true);\n  const [deleting, setDeleting] = useState(1);\n\n  const commentsFromServer = (id: number | null) => {\n    getPostComments(id)\n      .then(comment => setComments(comment))\n      // eslint-disable-next-line no-console\n      .catch(err => console.log(err));\n  };\n\n  useEffect(() => {\n    getPostDetails(selectedPostId)\n      .then(post => setPostInfo(post))\n      // eslint-disable-next-line no-console\n      .catch(err => console.log(err));\n\n    commentsFromServer(selectedPostId);\n  }, [selectedPostId, deleting]);\n\n  const deleteComments = (id: number) => {\n    deleteComment(id);\n    setDeleting(deleting + 1);\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{postInfo?.body}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => {\n            if (comments?.length !== 0) {\n              setVisibleComments(!visibleComments);\n            }\n          }}\n        >\n          {`${visibleComments ? 'Hide' : 'Show'}${comments?.length} comments`}\n        </button>\n\n        {visibleComments\n        && (\n          <ul className=\"PostDetails__list\">\n            {comments?.map(comment => (\n              <li\n                className=\"PostDetails__list-item\"\n                key={comment.id}\n              >\n                <button\n                  type=\"button\"\n                  className=\"PostDetails__remove-button button\"\n                  onClick={() => {\n                    deleteComments(comment.id);\n                  }}\n                >\n                  X\n                </button>\n                <p>{comment.body}</p>\n              </li>\n            ))}\n          </ul>\n        )}\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            postId={selectedPostId}\n            commentsFromServer={commentsFromServer}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\n\nconst App: React.FC = () => {\n  const [userId, setUserId] = useState(0);\n  const [selectedPostId, setSelectedPostId] = useState(0);\n  const [post, setPost] = useState<Post | null>(null);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            value={userId}\n            onChange={(event) => {\n              setUserId(+event.target.value);\n            }}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            userId={userId}\n            setSelectedPostId={setSelectedPostId}\n            selectedPostId={selectedPostId}\n            setPost={setPost}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {post\n          && (\n            <PostDetails\n              selectedPostId={selectedPostId}\n            />\n          )}\n        </div>\n\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}